"""Initial database schema with all models

Revision ID: c5a0631f39b3
Revises: 
Create Date: 2025-07-31 12:45:41.223609

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c5a0631f39b3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('customer_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('customer_name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('doctor_name', sa.String(), nullable=True),
    sa.Column('total_patients', sa.Integer(), nullable=True),
    sa.Column('customer_grade', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('customer_id'),
    sa.UniqueConstraint('customer_name', 'address', name='uq_customer_name_address')
    )
    op.create_table('employees',
    sa.Column('employee_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('employee_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('products',
    sa.Column('product_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('chat_sessions',
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('session_title', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_table('documents',
    sa.Column('doc_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uploader_id', sa.Integer(), nullable=False),
    sa.Column('doc_title', sa.String(), nullable=False),
    sa.Column('doc_type', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['uploader_id'], ['employees.employee_id'], ),
    sa.PrimaryKeyConstraint('doc_id')
    )
    op.create_table('employee_info',
    sa.Column('employee_info_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('employee_number', sa.String(), nullable=True),
    sa.Column('team', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('business_unit', sa.String(), nullable=True),
    sa.Column('branch', sa.String(), nullable=True),
    sa.Column('contact_number', sa.String(), nullable=True),
    sa.Column('base_salary', sa.Integer(), nullable=True),
    sa.Column('incentive_pay', sa.Integer(), nullable=True),
    sa.Column('avg_monthly_budget', sa.Integer(), nullable=True),
    sa.Column('latest_evaluation', sa.String(), nullable=True),
    sa.Column('responsibilities', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.PrimaryKeyConstraint('employee_info_id'),
    sa.UniqueConstraint('employee_number')
    )
    op.create_table('assignment_map',
    sa.Column('assignment_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.customer_id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee_info.employee_info_id'], ),
    sa.PrimaryKeyConstraint('assignment_id'),
    sa.UniqueConstraint('employee_id', 'customer_id', name='uq_assignment_employee_customer')
    )
    op.create_table('chat_history',
    sa.Column('message_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_table('document_relations',
    sa.Column('relation_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('doc_id', sa.Integer(), nullable=False),
    sa.Column('related_entity_type', sa.String(), nullable=False),
    sa.Column('related_entity_id', sa.Integer(), nullable=False),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doc_id'], ['documents.doc_id'], ),
    sa.PrimaryKeyConstraint('relation_id'),
    sa.UniqueConstraint('doc_id', 'related_entity_type', 'related_entity_id', name='uq_doc_relation_unique')
    )
    op.create_table('interaction_logs',
    sa.Column('log_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('interaction_type', sa.String(), nullable=True),
    sa.Column('summary', sa.String(), nullable=True),
    sa.Column('sentiment', sa.String(), nullable=True),
    sa.Column('compliance_risk', sa.String(), nullable=True),
    sa.Column('interacted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.customer_id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee_info.employee_info_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_table('sales_records',
    sa.Column('record_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('sale_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('sale_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.customer_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['employee_id'], ['employee_info.employee_info_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('record_id')
    )
    op.create_table('system_trace_logs',
    sa.Column('trace_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.BigInteger(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=True),
    sa.Column('log_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('latency_ms', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_history.message_id'], ),
    sa.PrimaryKeyConstraint('trace_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('system_trace_logs')
    op.drop_table('sales_records')
    op.drop_table('interaction_logs')
    op.drop_table('document_relations')
    op.drop_table('chat_history')
    op.drop_table('assignment_map')
    op.drop_table('employee_info')
    op.drop_table('documents')
    op.drop_table('chat_sessions')
    op.drop_table('products')
    op.drop_table('employees')
    op.drop_table('customers')
    # ### end Alembic commands ###
